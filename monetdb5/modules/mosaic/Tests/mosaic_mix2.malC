a:= bat.new(:int);

bat.append(a,17:int);
bat.append(a,5:int);
bat.append(a,1:int);
bat.append(a,15:int);
bat.append(a,11:int);
bat.append(a,14:int);
bat.append(a,23:int);
bat.append(a,17:int);
bat.append(a,10:int);
bat.append(a,24:int);
bat.append(a,18:int);
bat.append(a,8:int);
bat.append(a,3:int);
bat.append(a,15:int);
bat.append(a,8:int);
bat.append(a,22:int);
bat.append(a,19:int);
bat.append(a,16:int);
bat.append(a,24:int);
bat.append(a,3:int);
bat.append(a,2:int);
bat.append(a,4:int);
bat.append(a,9:int);
bat.append(a,0:int);
bat.append(a,22:int);
bat.append(a,21:int);
bat.append(a,18:int);
bat.append(a,0:int);
bat.append(a,1:int);
bat.append(a,16:int);
bat.append(a,16:int);
bat.append(a,23:int);
bat.append(a,7:int);
bat.append(a,10:int);
bat.append(a,21:int);
bat.append(a,13:int);
bat.append(a,0:int);
bat.append(a,4:int);
bat.append(a,8:int);
bat.append(a,22:int);
bat.append(a,18:int);
bat.append(a,22:int);
bat.append(a,12:int);
bat.append(a,7:int);
bat.append(a,9:int);
bat.append(a,24:int);
bat.append(a,14:int);
bat.append(a,14:int);
bat.append(a,24:int);
bat.append(a,9:int);
bat.append(a,9:int);
bat.append(a,19:int);

mosaic.compress(a, "dict256 linear");
c := mosaic.decompress(a);
eq  := batcalc.==(a,  c, true:bit);
io.print(a, c, eq);
