# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2020 MonetDB B.V.
#
# Test SQL API for TRACER:
# In some test cases (marked with #WARNING) the argument used is supposed to be 
# an enum entry used to count the number of elements (e.g: COMPONENTS_COUNT in 
# gdk_tracer.h). Thus, in those cases an error should be raised. However, adding 
# or removing entries will affect the marked test cases and they won't fail.


# logging.setcomplevel(...)
logging.setcomplevel(-1, 1);    # Should raise an error
                                # Component -1 does not exist

logging.setcomplevel(3, -1);    # Should raise an error
                                # Log level -1 does not exist

logging.setcomplevel(-10, -1);  # Should raise an error
                                # Component -10 does not exist
                                # Log level -1 does not exist

# WARNING
logging.setcomplevel(1, 5);     # Should raise an error
                                # The last level is used for enum count

# WARNING
logging.setcomplevel(89, 3);    # Should raise an error
                                # The last component is used for enum count

# WARNING
logging.setcomplevel(89, 5);    # Should raise an error
                                # The last component is used for enum count
                                # The last level is used for enum count

logging.setcomplevel(1, 4);     # OK



# logging.resetcomplevel(...)
logging.resetcomplevel(-1);     # Should raise an error
                                # Component -1 does not exist

# WARNING
logging.resetcomplevel(89);     # Should raise an error
                                # The last component is used for enum count

logging.resetcomplevel(1);      # OK



# logging.setlayerlevel(...)
logging.setlayerlevel(-1, 1);   # Should raise an error
                                # Layer -1 does not exist

logging.setlayerlevel(2, -1);   # Should raise an error
                                # Log level -1 does not exist

logging.setlayerlevel(-10, -1); # Should raise an error
                                # Layer -10 does not exist
                                # Log level -1 does not exist

# WARNING
logging.setlayerlevel(4, 2);    # Should raise an error
                                # The last layer is used for enum count

# WARNING
logging.setlayerlevel(1, 5);    # Should raise an error
                                # The last level is used for enum count

# WARNING
logging.setlayerlevel(4, 5);    # Should raise an error
                                # The last layer is used for enum count
                                # The last level is used for enum count

logging.setlayerlevel(1, 2);    # OK



# logging.resetlayerlevel(...)
logging.resetlayerlevel(-1);    # Should raise an error
                                # Layer -1 does not exist

# WARNING
logging.resetlayerlevel(4);     # Should raise an error
                                # The last layer is used for enum count   

logging.resetlayerlevel(1);     # OK



# logging.setflushlevel(...)
logging.setflushlevel(-1);     # Should raise an error
                               # Level -1 does not exist

# WARNING
logging.setflushlevel(5);      # Should raise an error
                               # The last level is used for enum count

logging.setflushlevel(3);      # OK



logging.resetflushlevel();



# logging.setadapter(...)
logging.setadapter(-1);        # Should raise an error
                               # Adapter -1 does not exist

# WARNING
logging.setadapter(2);         # Should raise an error
                               # The last adapter is used for enum count

logging.setadapter(1);         # OK



logging.resetadapter();



# Show log levels etc
logging.showinfo();
