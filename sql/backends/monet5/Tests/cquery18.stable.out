stdout of test 'cquery18` in directory 'sql/backends/monet5` itself:


# 16:05:22 >  
# 16:05:22 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37159" "--set" "mapi_usock=/var/tmp/mtest-1786/.s.monetdb.37159" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/MonetDB-trails/BUILD/var/MonetDB/mTests_sql_backends_monet5" "--set" "embedded_r=yes" "--set" "embedded_py=true"
# 16:05:22 >  

# MonetDB 5 server v11.28.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.498 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://dhcp-120.eduroam.cwi.nl:37159/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1786/.s.monetdb.37159
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/Timetrails module loaded
# MonetDB/Python2 module loaded
# MonetDB/R   module loaded

# 14:08:03 >  
# 14:08:03 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-244726" "--port=32392"
# 14:08:03 >  

#create table testing18(aaa real);
#create procedure cq_query18(ppp integer)
#begin
#	insert into testing18 values (1 / ppp);
#end;
#start continuous procedure cq_query18(1) with heartbeat 1000 cycles 1;
#select aaa from testing18;
% sys.testing18 # table_name
% aaa # name
% real # type
% 15 # length
[ 1	]
#start continuous procedure cq_query18(0) with heartbeat 1000 cycles 2;
#select aaa from testing18;
% sys.testing18 # table_name
% aaa # name
% real # type
% 15 # length
[ 1	]
#select alias, errors from cquery.status();
% .%1,	.%1 # table_name
% alias,	errors # name
% clob,	clob # type
% 10,	36 # length
[ "cq_query18",	"MALException:calc./:operation failed"	]
#resume continuous cq_query18; --ok
#stop continuous cq_query18; --ok
#start continuous procedure cq_query18(2) with heartbeat 1000 cycles 2; --ok
#select aaa from testing18;
% sys.testing18 # table_name
% aaa # name
% real # type
% 15 # length
[ 1	]
[ 0	]
[ 0	]
#select alias, "errors" from cquery.status();
% .%1,	.%1 # table_name
% alias,	errors # name
% clob,	clob # type
% 0,	0 # length
#drop procedure cq_query18;
#drop table testing18;

# 16:05:26 >  
# 16:05:26 >  "Done."
# 16:05:26 >  

