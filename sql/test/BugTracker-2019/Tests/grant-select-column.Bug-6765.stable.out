stdout of test 'grant-select-column.Bug-6765` in directory 'sql/test/BugTracker-2019` itself:


# 22:34:40 >  
# 22:34:40 >  "/usr/bin/python3" "grant-select-column.Bug-6765.py" "grant-select-column.Bug-6765"
# 22:34:40 >  

#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
[ 2	]
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#SELECT "id", "name" FROM "myschema"."test";
% myschema.test,	myschema.test # table_name
% id,	name # name
% int,	varchar # type
% 1,	5 # length
[ 1,	"Tom"	]
[ 2,	"Karen"	]
#REVOKE SELECT ON "myschema"."test" FROM myuser;GRANT SELECT ("name") ON "myschema"."test" TO myuser;
#REVOKE SELECT ON "myschema"."test" FROM myuser;GRANT SELECT ("name") ON "myschema"."test" TO myuser;
#SELECT "name" FROM "myschema"."test"; --ok
% myschema.test # table_name
% name # name
% varchar # type
% 5 # length
[ "Tom"	]
[ "Karen"	]
#DROP USER myuser;DROP SCHEMA "myschema" CASCADE;
#DROP USER myuser;DROP SCHEMA "myschema" CASCADE;
# MonetDB 5 server v11.35.0 (hg id: 0563f80544ab)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.384 GiB available main-memory of which we use 12.538 GiB
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:31053/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-26496/.s.monetdb.31053
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 61_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded

# 22:34:40 >  
# 22:34:40 >  "Done."
# 22:34:40 >  

