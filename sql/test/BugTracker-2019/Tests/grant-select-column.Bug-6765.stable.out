stdout of test 'grant-select-column.Bug-6765` in directory 'sql/test/BugTracker-2019` itself:


# 19:45:13 >  
# 19:45:13 >  "/usr/bin/python3" "grant-select-column.Bug-6765.py" "grant-select-column.Bug-6765"
# 19:45:13 >  

#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
[ 2	]
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#CREATE schema  "myschema";CREATE TABLE "myschema"."test" ("id" integer, "name" varchar(20));INSERT INTO "myschema"."test" ("id", "name") VALUES (1,'Tom'),(2,'Karen');CREATE USER myuser WITH UNENCRYPTED PASSWORD 'Test123' NAME 'Hulk' SCHEMA "myschema";GRANT SELECT ON "myschema"."test" TO myuser;
#SELECT "id", "name" FROM "myschema"."test";
% myschema.test,	myschema.test # table_name
% id,	name # name
% int,	varchar # type
% 1,	5 # length
[ 1,	"Tom"	]
[ 2,	"Karen"	]
#REVOKE SELECT ON "myschema"."test" FROM myuser;GRANT SELECT ("name") ON "myschema"."test" TO myuser;
#REVOKE SELECT ON "myschema"."test" FROM myuser;GRANT SELECT ("name") ON "myschema"."test" TO myuser;
#DROP USER myuser;DROP SCHEMA "myschema" CASCADE;
#DROP USER myuser;DROP SCHEMA "myschema" CASCADE;
# MonetDB 5 server v11.36.0 (hg id: 1d18bd8860b4+)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.384 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33829/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-3703/.s.monetdb.33829
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 19:45:13 >  
# 19:45:13 >  "Done."
# 19:45:13 >  

