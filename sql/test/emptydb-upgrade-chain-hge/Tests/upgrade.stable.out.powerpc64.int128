stdout of test 'upgrade` in directory 'sql/test/emptydb-upgrade-chain-hge` itself:


# 16:53:39 >  
# 16:53:39 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39660" "--set" "mapi_usock=/var/tmp/mtest-30908/.s.monetdb.39660" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-stable/var/MonetDB/mTests_sql_test_emptydb-upgrade-chain-hge" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 16:53:39 >  

# MonetDB 5 server v11.21.16 (hg id: c20b591c1c70+)
# This is an unreleased version
# Serving database 'mTests_sql_test_emptydb-upgrade-chain-hge', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.da.cwi.nl:39660/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-30908/.s.monetdb.39660
# MonetDB/GIS module loaded
Running database upgrade commands:
set schema "sys";
create procedure suspend_log_flushing()
 external name sql.suspend_log_flushing;
create procedure resume_log_flushing()
 external name sql.resume_log_flushing;
create procedure hot_snapshot(tarfile string)
 external name sql.hot_snapshot;
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name in ('suspend_log_flushing', 'resume_log_flushing', 'hot_snapshot') and type = 2;
drop view sys.tracelog;
drop function sys.tracelog();
create function sys.tracelog()
	returns table (
		ticks bigint, -- time in microseconds
		stmt string  -- actual statement executed
	)
	external name sql.dump_trace;
create view sys.tracelog as select * from sys.tracelog();
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name = 'tracelog' and type = 5;
update sys._tables set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name = 'tracelog';
drop view sys.sessions;
drop function sys.sessions;
create function sys.sessions()
returns table(
"sessionid" int,
"user" string,
"login" timestamp,
"idle" timestamp,
"optimizer" string,
"sessiontimeout" int,
"querytimeout" int,
"workerlimit" int,
"memorylimit" int)
 external name sql.sessions;
create view sys.sessions as select * from sys.sessions();
create procedure sys.setoptimizer("optimizer" string)
 external name clients.setoptimizer;
create procedure sys.setquerytimeout("query" int)
 external name clients.setquerytimeout;
create procedure sys.setsessiontimeout("timeout" int)
 external name clients.setsessiontimeout;
create procedure sys.setworkerlimit("limit" int)
 external name clients.setworkerlimit;
create procedure sys.setmemorylimit("limit" int)
 external name clients.setmemorylimit;
create procedure sys.setoptimizer("sessionid" int, "optimizer" string)
 external name clients.setoptimizer;
create procedure sys.setquerytimeout("sessionid" int, "query" int)
 external name clients.setquerytimeout;
create procedure sys.setsessiontimeout("sessionid" int, "query" int)
 external name clients.setsessiontimeout;
create procedure sys.setworkerlimit("sessionid" int, "limit" int)
 external name clients.setworkerlimit;
create procedure sys.setmemorylimit("sessionid" int, "limit" int)
 external name clients.setmemorylimit;
create procedure sys.stopsession("sessionid" int)
 external name clients.stopsession;
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name = 'sessions' and type = 5;
update sys._tables set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name = 'sessions';
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name in ('setoptimizer', 'setquerytimeout', 'setsessiontimeout', 'setworkerlimit', 'setmemorylimit', 'setoptimizer', 'stopsession') and type = 2;
create function sys.debug(flag string) returns integer
 external name mdb."setDebug";
create function sys.debugflags()
 returns table(flag string, val bool)
 external name mdb."getDebugFlags";
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name in ('debug', 'debugflags');
drop view sys.queue;
drop function sys.queue;
create function sys.queue()
returns table(
 tag bigint,
 sessionid int,
	"user" string,
 started timestamp,
 status string,
 query string,
 progress int,
 workers int,
 memory int
)
external name sql.sysmon_queue;
grant execute on function sys.queue to public;
create view sys.queue as select * from sys.queue();
grant select on sys.queue to public;
create procedure sys.pause(tag tinyint)
external name sql.sysmon_pause;
create procedure sys.resume(tag tinyint)
external name sql.sysmon_resume;
create procedure sys.stop(tag tinyint)
external name sql.sysmon_stop;
create procedure sys.pause(tag smallint)
external name sql.sysmon_pause;
create procedure sys.resume(tag smallint)
external name sql.sysmon_resume;
create procedure sys.stop(tag smallint)
external name sql.sysmon_stop;
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name = 'queue' and type = 5;
update sys.functions set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name in ('pause', 'resume', 'stop') and type = 2;
update sys._tables set system = true where schema_id = (select id from sys.schemas where name = 'sys') and name = 'queue';
ALTER TABLE sys.keywords SET READ WRITE;
insert into sys.keywords values ('CUBE'), ('GROUPING'), ('ROLLUP'), ('SETS');
commit;
set schema "sys";

Running database upgrade commands:
set schema "sys";
ALTER TABLE sys.keywords SET READ ONLY;
set schema "sys";

# MonetDB/SQL module loaded

# 15:17:55 >  
# 15:17:55 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-6495" "--port=30245"
# 15:17:55 >  

#select 1;
% . # table_name
% single_value # name
% tinyint # type
% 1 # length
[ 1	]

# 16:53:39 >  
# 16:53:39 >  "Done."
# 16:53:39 >  

