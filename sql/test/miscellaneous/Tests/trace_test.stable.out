stdout of test 'trace_test` in directory 'sql/test/miscellaneous` itself:


# 08:41:05 >  
# 08:41:05 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34061" "--set" "mapi_usock=/var/tmp/mtest-1541/.s.monetdb.34061" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_miscellaneous" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 08:41:05 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_sql_test_miscellaneous', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:34061/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1541/.s.monetdb.34061
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded


# 08:41:05 >  
# 08:41:05 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1541" "--port=34061"
# 08:41:05 >  

#select '~BeginProfilingOutput~';
% . # table_name
% single_value # name
% char # type
% 22 # length
[ "~BeginProfilingOutput~"	]
#trace select count(*) from tables;
% .%10 # table_name
% %10 # name
% bigint # type
% 2 # length
[ 95	]
#trace select count(*) from tables;
% .trace,	.trace # table_name
% usec,	statement # name
% bigint,	clob # type
% 3,	195 # length
[ 2,	"X_1=0@0:void := querylog.define(\"trace select count(*) from tables;\":str, \"default_pipe\":str, 30:int);"	]
[ 2,	"X_4=0:int := sql.mvc();"	]
[ 61,	"C_5=<tmp_257>[95]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str);"	]
[ 45,	"(X_168=<sql_empty_oid_bat>[0]:bat[:oid], X_169=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 6:int, 8:int);"	]
[ 49,	"(X_166=<sql_empty_oid_bat>[0]:bat[:oid], X_167=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 5:int, 8:int);"	]
[ 61,	"(X_170=<sql_empty_oid_bat>[0]:bat[:oid], X_171=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 7:int, 8:int);"	]
[ 37,	"(X_161=<sql_empty_oid_bat>[0]:bat[:oid], X_162=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 3:int, 8:int);"	]
[ 122,	"C_107=<tmp_1637>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 4:int, 8:int);"	]
[ 57,	"(X_163=<sql_empty_oid_bat>[0]:bat[:oid], X_164=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 4:int, 8:int);"	]
[ 3,	"C_204=<tmp_2217>[0]:bat[:oid] := algebra.thetaselect(X_171=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 6,	"C_202=<tmp_1562>[0]:bat[:oid] := algebra.thetaselect(X_167=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 6,	"C_203=<tmp_1567>[0]:bat[:oid] := algebra.thetaselect(X_169=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 5,	"C_200=<tmp_1551>[0]:bat[:oid] := algebra.thetaselect(X_162=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 9,	"(X_159=<sql_empty_oid_bat>[0]:bat[:oid], X_160=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 2:int, 8:int);"	]
[ 4,	"C_201=<tmp_1642>[0]:bat[:oid] := algebra.thetaselect(X_164=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 10,	"(X_157=<sql_empty_oid_bat>[0]:bat[:oid], X_158=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 1:int, 8:int);"	]
[ 5,	"(X_21=<sql_empty_oid_bat>[0]:bat[:oid], X_22=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int);"	]
[ 4,	"C_199=<tmp_1565>[0]:bat[:oid] := algebra.thetaselect(X_160=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 6,	"X_20=<sql_empty_sht_bat>[0]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 1:int);"	]
[ 21,	"(X_155=<sql_empty_oid_bat>[0]:bat[:oid], X_156=<sql_empty_sht_bat>[0]:bat[:sht]) := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 2:int, 0:int, 8:int);"	]
[ 183,	"C_99=<tmp_1520>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 0:int, 8:int);"	]
[ 3,	"C_197=<tmp_1506>[0]:bat[:oid] := algebra.thetaselect(X_156=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 21,	"C_198=<tmp_1775>[0]:bat[:oid] := algebra.thetaselect(X_158=<sql_empty_sht_bat>[0]:bat[:sht], nil:bat[:oid], 2:sht, \"!=\":str);"	]
[ 34,	"X_154=<tmp_2135>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 7:int, 8:int);"	]
[ 35,	"X_152=<tmp_1473>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 6:int, 8:int);"	]
[ 15,	"X_212=<tmp_2010>[12]:bat[:oid] := mat.packIncrement(C_99=<tmp_1520>[12]:bat[:oid], 8:int);"	]
[ 46,	"X_150=<tmp_1510>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 5:int, 8:int);"	]
[ 46,	"X_148=<tmp_270>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 4:int, 8:int);"	]
[ 180,	"C_101=<tmp_372>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 1:int, 8:int);"	]
[ 25,	"X_142=<tmp_1553>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 1:int, 8:int);"	]
[ 22,	"X_140=<tmp_2166>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 0:int, 8:int);"	]
[ 4,	"X_214=<tmp_2010>[24]:bat[:oid] := mat.packIncrement(X_212=<tmp_2010>[24]:bat[:oid], C_101=<tmp_372>[12]:bat[:oid]);"	]
[ 13,	"C_193=<tmp_1542>[12]:bat[:oid] := algebra.thetaselect(X_148=<tmp_270>[12]:bat[:sht], C_107=<tmp_1637>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 11,	"C_189=<tmp_1534>[12]:bat[:oid] := algebra.thetaselect(X_140=<tmp_2166>[12]:bat[:sht], C_99=<tmp_1520>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 1,	"language.pass(C_99=<tmp_1520>[12]:bat[:oid]);"	]
[ 88,	"X_144=<tmp_267>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 2:int, 8:int);"	]
[ 27,	"C_103=<tmp_472>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 2:int, 8:int);"	]
[ 70,	"C_113=<tmp_2142>[11]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 7:int, 8:int);"	]
[ 30,	"C_105=<tmp_270>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 3:int, 8:int);"	]
[ 100,	"C_111=<tmp_2243>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 6:int, 8:int);"	]
[ 21,	"C_195=<tmp_2200>[12]:bat[:oid] := algebra.thetaselect(X_152=<tmp_1473>[12]:bat[:sht], C_111=<tmp_2243>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 92,	"C_196=<tmp_1654>[11]:bat[:oid] := algebra.thetaselect(X_154=<tmp_2135>[12]:bat[:sht], C_113=<tmp_2142>[11]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 157,	"C_109=<tmp_1773>[12]:bat[:oid] := sql.tid(X_4=0:int, \"sys\":str, \"_tables\":str, 5:int, 8:int);"	]
[ 5,	"X_215=<tmp_2010>[36]:bat[:oid] := mat.packIncrement(X_214=<tmp_2010>[36]:bat[:oid], C_103=<tmp_472>[12]:bat[:oid]);"	]
[ 4,	"X_216=<tmp_2010>[48]:bat[:oid] := mat.packIncrement(X_215=<tmp_2010>[48]:bat[:oid], C_105=<tmp_270>[12]:bat[:oid]);"	]
[ 18,	"C_190=<tmp_1547>[12]:bat[:oid] := algebra.thetaselect(X_142=<tmp_1553>[12]:bat[:sht], C_101=<tmp_372>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 21,	"C_191=<tmp_601>[12]:bat[:oid] := algebra.thetaselect(X_144=<tmp_267>[12]:bat[:sht], C_103=<tmp_472>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 3,	"X_217=<tmp_2010>[60]:bat[:oid] := mat.packIncrement(X_216=<tmp_2010>[60]:bat[:oid], C_107=<tmp_1637>[12]:bat[:oid]);"	]
[ 1,	"language.pass(C_101=<tmp_372>[12]:bat[:oid]);"	]
[ 14,	"C_194=<tmp_1522>[12]:bat[:oid] := algebra.thetaselect(X_150=<tmp_1510>[12]:bat[:sht], C_109=<tmp_1773>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 2,	"language.pass(C_103=<tmp_472>[12]:bat[:oid]);"	]
[ 318,	"X_146=<tmp_2125>[12]:bat[:sht] := sql.bind(X_4=0:int, \"sys\":str, \"_tables\":str, \"type\":str, 0:int, 3:int, 8:int);"	]
[ 1,	"language.pass(C_107=<tmp_1637>[12]:bat[:oid]);"	]
[ 5,	"X_218=<tmp_2010>[72]:bat[:oid] := mat.packIncrement(X_217=<tmp_2010>[72]:bat[:oid], C_109=<tmp_1773>[12]:bat[:oid]);"	]
[ 1,	"language.pass(C_109=<tmp_1773>[12]:bat[:oid]);"	]
[ 3,	"X_219=<tmp_2010>[84]:bat[:oid] := mat.packIncrement(X_218=<tmp_2010>[84]:bat[:oid], C_111=<tmp_2243>[12]:bat[:oid]);"	]
[ 0,	"language.pass(C_111=<tmp_2243>[12]:bat[:oid]);"	]
[ 12,	"C_192=<tmp_1527>[12]:bat[:oid] := algebra.thetaselect(X_146=<tmp_2125>[12]:bat[:sht], C_105=<tmp_270>[12]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 1,	"language.pass(C_105=<tmp_270>[12]:bat[:oid]);"	]
[ 742,	"barrier X_246=false:bit := language.dataflow();"	]
[ 5,	"X_229=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_155=<sql_empty_oid_bat>[0]:bat[:oid], 8:int);"	]
[ 14,	"C_32=<tmp_1637>[0]:bat[:oid] := sql.tid(X_4=0:int, \"tmp\":str, \"_tables\":str);"	]
[ 7,	"X_237=<tmp_255>[0]:bat[:oid] := mat.packIncrement(C_197=<tmp_1506>[0]:bat[:oid], 8:int);"	]
[ 23,	"C_5=<tmp_2010>[95]:bat[:oid] := mat.packIncrement(X_219=<tmp_2010>[95]:bat[:oid], C_113=<tmp_2142>[11]:bat[:oid]);"	]
[ 16,	"X_38=<tmp_1773>[0]:bat[:lng] := bat.new(nil:lng);"	]
[ 2,	"X_36=0:lng := aggr.count(C_32=<tmp_1637>[0]:bat[:oid]);"	]
[ 3,	"X_230=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_229=<tmp_372>[0]:bat[:oid], X_157=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 7,	"X_221=<tmp_1510>[12]:bat[:oid] := mat.packIncrement(C_189=<tmp_1534>[12]:bat[:oid], 8:int);"	]
[ 3,	"X_238=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_237=<tmp_255>[0]:bat[:oid], C_198=<tmp_1775>[0]:bat[:oid]);"	]
[ 2,	"X_231=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_230=<tmp_372>[0]:bat[:oid], X_159=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 3,	"X_222=<tmp_1510>[24]:bat[:oid] := mat.packIncrement(X_221=<tmp_1510>[24]:bat[:oid], C_190=<tmp_1547>[12]:bat[:oid]);"	]
[ 5,	"C_94=<tmp_2142>[0]:bat[:oid] := algebra.thetaselect(X_20=<sql_empty_sht_bat>[0]:bat[:sht], C_5=<tmp_2010>[95]:bat[:oid], 2:sht, \"!=\":str);"	]
[ 2,	"X_239=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_238=<tmp_255>[0]:bat[:oid], C_199=<tmp_1565>[0]:bat[:oid]);"	]
[ 2,	"X_232=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_231=<tmp_372>[0]:bat[:oid], X_161=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 2,	"X_223=<tmp_1510>[36]:bat[:oid] := mat.packIncrement(X_222=<tmp_1510>[36]:bat[:oid], C_191=<tmp_601>[12]:bat[:oid]);"	]
[ 2,	"X_240=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_239=<tmp_255>[0]:bat[:oid], C_200=<tmp_1551>[0]:bat[:oid]);"	]
[ 2,	"X_233=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_232=<tmp_372>[0]:bat[:oid], X_163=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 2,	"X_241=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_240=<tmp_255>[0]:bat[:oid], C_201=<tmp_1642>[0]:bat[:oid]);"	]
[ 2,	"X_242=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_241=<tmp_255>[0]:bat[:oid], C_202=<tmp_1562>[0]:bat[:oid]);"	]
[ 2,	"X_234=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_233=<tmp_372>[0]:bat[:oid], X_166=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 1,	"X_243=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_242=<tmp_255>[0]:bat[:oid], C_203=<tmp_1567>[0]:bat[:oid]);"	]
[ 3,	"X_224=<tmp_1510>[48]:bat[:oid] := mat.packIncrement(X_223=<tmp_1510>[48]:bat[:oid], C_192=<tmp_1527>[12]:bat[:oid]);"	]
[ 2,	"X_235=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_234=<tmp_372>[0]:bat[:oid], X_168=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 1,	"C_92=<tmp_255>[0]:bat[:oid] := mat.packIncrement(X_243=<tmp_255>[0]:bat[:oid], C_204=<tmp_2217>[0]:bat[:oid]);"	]
[ 2,	"X_225=<tmp_1510>[60]:bat[:oid] := mat.packIncrement(X_224=<tmp_1510>[60]:bat[:oid], C_193=<tmp_1542>[12]:bat[:oid]);"	]
[ 2,	"X_21=<tmp_372>[0]:bat[:oid] := mat.packIncrement(X_235=<tmp_372>[0]:bat[:oid], X_170=<sql_empty_oid_bat>[0]:bat[:oid]);"	]
[ 3,	"X_226=<tmp_1510>[72]:bat[:oid] := mat.packIncrement(X_225=<tmp_1510>[72]:bat[:oid], C_194=<tmp_1522>[12]:bat[:oid]);"	]
[ 2,	"X_227=<tmp_1510>[84]:bat[:oid] := mat.packIncrement(X_226=<tmp_1510>[84]:bat[:oid], C_195=<tmp_2200>[12]:bat[:oid]);"	]
[ 3,	"C_91=<tmp_1510>[95]:bat[:oid] := mat.packIncrement(X_227=<tmp_1510>[95]:bat[:oid], C_196=<tmp_1654>[11]:bat[:oid]);"	]
[ 1,	"C_27=<tmp_1510>[95]:bat[:oid] := sql.subdelta(C_91=<tmp_1510>[95]:bat[:oid], C_5=<tmp_2010>[95]:bat[:oid], X_21=<tmp_372>[0]:bat[:oid], C_92=<tmp_255>[0]:bat[:oid], C_94=<tmp_2142>[0]:bat[:oid]);"	]
[ 1,	"language.pass(C_5=<tmp_2010>[95]:bat[:oid]);"	]
[ 1,	"X_31=95:lng := aggr.count(C_27=<tmp_1510>[95]:bat[:oid]);"	]
[ 4,	"X_37=<tmp_1510>[1]:bat[:lng] := sql.single(X_31=95:lng);"	]
[ 3,	"X_40=<tmp_1773>[1]:bat[:lng] := bat.append(X_38=<tmp_1773>[1]:bat[:lng], X_37=<tmp_1510>[1]:bat[:lng], true:bit);"	]
[ 2,	"X_42=<tmp_1773>[2]:bat[:lng] := bat.append(X_40=<tmp_1773>[2]:bat[:lng], X_36=0:lng, true:bit);"	]
[ 13,	"X_43=95:lng := aggr.sum(X_42=<tmp_1773>[2]:bat[:lng]);"	]
[ 340,	"barrier X_256=false:bit := language.dataflow();"	]
[ 35,	"sql.resultSet(\".%10\":str, \"%10\":str, \"bigint\":str, 64:int, 0:int, 7:int, X_43=95:lng);"	]
#select '~EndProfilingOutput~';
% . # table_name
% single_value # name
% char # type
% 20 # length
[ "~EndProfilingOutput~"	]

# 08:41:06 >  
# 08:41:06 >  "Done."
# 08:41:06 >  

